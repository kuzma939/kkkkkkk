'use client';

import { useState, useEffect } from 'react';

const cities = [
  "–£–∂–≥–æ—Ä–æ–¥", "–£–º–∞–Ω—å", "–£—Å—Ç–∏–ª—É–≥", "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫", "–ö–∏—ó–≤", "–õ—å–≤—ñ–≤", "–•–∞—Ä–∫—ñ–≤", "–û–¥–µ—Å–∞"
];

export default function Checkout() {
  const [deliveryMethod, setDeliveryMethod] = useState('');
  const [cityQuery, setCityQuery] = useState('');
  const [filteredCities, setFilteredCities] = useState([]);
  const [paymentType, setPaymentType] = useState('');
  const [total, setTotal] = useState(0); // üîπ –¥–∏–Ω–∞–º—ñ—á–Ω–∞ —Å—É–º–∞

  useEffect(() => {
    const amount = localStorage.getItem('totalAmount');
    if (amount) {
      setTotal(Number(amount));
    }
  }, []);

  const prepayAmount = (total * 0.1).toFixed(2);

  const handleCityInput = (e) => {
    const value = e.target.value;
    setCityQuery(value);

    const matches = cities.filter((city) =>
      city.toLowerCase().startsWith(value.toLowerCase())
    );
    setFilteredCities(matches);
  };

  return (
    <div className="p-6 max-w-3xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h1>

      <form className="space-y-4">
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
          <div>
            <label className="block mb-1 font-medium">–Ü–º º—è</label>
            <input type="text" className="w-full p-2 border rounded" required />
          </div>
          <div>
            <label className="block mb-1 font-medium">–ü—Ä—ñ–∑–≤–∏—â–µ</label>
            <input type="text" className="w-full p-2 border rounded" required />
          </div>
          <div>
            <label className="block mb-1 font-medium">–ü–æ –±–∞—Ç—å–∫–æ–≤—ñ</label>
            <input type="text" className="w-full p-2 border rounded" />
          </div>
        </div>

        <div>
          <label className="block mb-1 font-medium">Email</label>
          <input type="email" className="w-full p-2 border rounded" required />
        </div>

        <div>
          <label className="block mb-1 font-medium">–¢–µ–ª–µ—Ñ–æ–Ω</label>
          <input type="tel" className="w-full p-2 border rounded" required />
        </div>

        <div>
          <label className="block mb-1 font-medium">–°–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏</label>
          <select
            value={deliveryMethod}
            onChange={(e) => setDeliveryMethod(e.target.value)}
            className="w-full p-2 border rounded"
            required
          >
            <option value="">–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–±</option>
            <option value="nova-poshta">–ù–æ–≤–∞ –ü–æ—à—Ç–∞</option>
            <option value="ukr-poshta">–£–∫—Ä–ø–æ—à—Ç–∞</option>
            <option value="courier">–ö—É—Ä º—î—Ä–æ–º</option>
          </select>
        </div>

        <div>
          <label className="block mb-1 font-medium">–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç</label>
          <input
            type="text"
            value={cityQuery}
            onChange={handleCityInput}
            placeholder="–ü–æ—á–Ω—ñ—Ç—å –≤–≤–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞"
            className="w-full p-2 border rounded"
          />
          {filteredCities.length > 0 && (
            <ul className="mt-2 border rounded shadow bg-white">
              {filteredCities.map((city, idx) => (
                <li
                  key={idx}
                  onClick={() => {
                    setCityQuery(city);
                    setFilteredCities([]);
                  }}
                  className="p-2 hover:bg-gray-100 cursor-pointer"
                >
                  {city}
                </li>
              ))}
            </ul>
          )}
        </div>

        <div>
          <label className="block mb-1 font-medium">–ö–æ–º–µ–Ω—Ç–∞—Ä</label>
          <textarea
            rows={4}
            placeholder="–ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
            className="w-full p-2 border rounded"
          />
        </div>

        <div>
          <label className="block mb-1 font-medium">–û–ø–ª–∞—Ç–∞</label>
          <div className="space-y-2">
            <label className="flex items-center space-x-2">
              <input
                type="radio"
                name="payment"
                value="full"
                checked={paymentType === 'full'}
                onChange={() => setPaymentType('full')}
              />
              <span>–û–ø–ª–∞—Ç–∞ –æ–Ω–ª–∞–π–Ω (–ø–æ–≤–Ω–∞ —Å—É–º–∞: {total} –≥—Ä–Ω)</span>
            </label>
            <label className="flex items-center space-x-2">
              <input
                type="radio"
                name="payment"
                value="prepay"
                checked={paymentType === 'prepay'}
                onChange={() => setPaymentType('prepay')}
              />
              <span>–ü–µ—Ä–µ–¥–ø–ª–∞—Ç–∞ 10% ({prepayAmount} –≥—Ä–Ω), —Ä–µ—à—Ç–∞ ‚Äî –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ</span>
            </label>
          </div>
        </div>

        <button
          type="submit"
          className="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
          disabled={!paymentType}
        >
          –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        </button>
      </form>
    </div>
  );
}
