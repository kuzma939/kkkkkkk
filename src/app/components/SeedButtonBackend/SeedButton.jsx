import products from '../../data/products';
 
 export default function SeedButton() {
   const normalizeProduct = (raw) => {
     return {
       ...raw,
       images: raw.images?.filter(img => typeof img === 'string').map(url => ({ url })) || [],
       sizes: raw.sizes?.map(value => ({ value })) || [],
       translations: raw.translations
         ? Object.entries(raw.translations).map(([locale, t]) => ({
             locale,
             name: t.name,
             description: t.description,
             category: t.category,
             colors: t.colors,
           }))
         : [],
     };
   };
 
   const handleSeed = async () => {
     console.log('üå± –ö–Ω–æ–ø–∫—É –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ ‚Äî –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø—Ä–æ–¥—É–∫—Ç–∏ –ø–æ—Ä—Ü—ñ—è–º–∏...');
 
     // üîπ –•–µ–ª–ø–µ—Ä –¥–ª—è —Ä–æ–∑–±–∏—Ç—Ç—è –Ω–∞ —à–º–∞—Ç–∫–∏
     const normalized = products.map(normalizeProduct); // üí• –Ω–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ
     const chunks = (arr, size) =>
       Array.from({ length: Math.ceil(arr.length / size) }, (_, i) =>
         arr.slice(i * size, i * size + size)
       );
 

     const productChunks = chunks(normalized, 10); // –†–æ–∑–±–∏–≤–∞—î–º–æ –ø–æ 10
 
     try {
       for (const [i, chunk] of productChunks.entries()) {
         console.log(`‚û°Ô∏è –ù–∞–¥—Å–∏–ª–∞—î–º–æ —á–∞—Å—Ç–∏–Ω—É ${i + 1} –∑ ${productChunks.length}`);
         const res = await fetch('https://shoopingsite-backend.onrender.com/api/seed-products', {
           method: 'POST',
           headers: {
             'Content-Type': 'application/json',
           },
           body: JSON.stringify(chunk),
         });
 
         if (!res.ok) {
           const text = await res.text();
           throw new Error(`–ü–æ–º–∏–ª–∫–∞ —á–∞—Å—Ç–∏–Ω–∏ ${i + 1}: ${text}`);
         }
       }
 
       alert('‚úÖ –£—Å—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!');
     } catch (error) {
       console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤:', error.message);
       alert('–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫!');
     }
   };
 
   return (
     <button
       onClick={handleSeed}
       className="p-3 bg-green-600 text-white rounded hover:bg-green-700"
     >
       –î–æ–¥–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –≤ –±–∞–∑—É
     </button>
   );
 }